/* tslint:disable */
/* eslint-disable */
/**
 * CodeBox API
 * Code Box
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 消除只读字段
 * @export
 * @interface TemplateCreation
 */
export interface TemplateCreation {
    /**
     * 
     * @type {number}
     * @memberof TemplateCreation
     */
    release: number;
    /**
     * 
     * @type {string}
     * @memberof TemplateCreation
     */
    playbook?: string;
    /**
     * 
     * @type {string}
     * @memberof TemplateCreation
     */
    role?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TemplateCreation
     */
    tags?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TemplateCreation
     */
    inventories?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TemplateCreation
     */
    envvars?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TemplateCreation
     */
    extravars?: string | null;
    /**
     * 
     * @type {number}
     * @memberof TemplateCreation
     */
    forks?: number;
    /**
     * 
     * @type {number}
     * @memberof TemplateCreation
     */
    timeout?: number;
    /**
     * 
     * @type {string}
     * @memberof TemplateCreation
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof TemplateCreation
     */
    description?: string | null;
}

/**
 * Check if a given object implements the TemplateCreation interface.
 */
export function instanceOfTemplateCreation(value: object): value is TemplateCreation {
    if (!('release' in value) || value['release'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function TemplateCreationFromJSON(json: any): TemplateCreation {
    return TemplateCreationFromJSONTyped(json, false);
}

export function TemplateCreationFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplateCreation {
    if (json == null) {
        return json;
    }
    return {
        
        'release': json['release'],
        'playbook': json['playbook'] == null ? undefined : json['playbook'],
        'role': json['role'] == null ? undefined : json['role'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'inventories': json['inventories'] == null ? undefined : json['inventories'],
        'envvars': json['envvars'] == null ? undefined : json['envvars'],
        'extravars': json['extravars'] == null ? undefined : json['extravars'],
        'forks': json['forks'] == null ? undefined : json['forks'],
        'timeout': json['timeout'] == null ? undefined : json['timeout'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function TemplateCreationToJSON(value?: TemplateCreation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'release': value['release'],
        'playbook': value['playbook'],
        'role': value['role'],
        'tags': value['tags'],
        'inventories': value['inventories'],
        'envvars': value['envvars'],
        'extravars': value['extravars'],
        'forks': value['forks'],
        'timeout': value['timeout'],
        'name': value['name'],
        'description': value['description'],
    };
}

