/* tslint:disable */
/* eslint-disable */
/**
 * CodeBox API
 * Code Box
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Todo } from './Todo';
import {
    TodoFromJSON,
    TodoFromJSONTyped,
    TodoToJSON,
} from './Todo';

/**
 * 
 * @export
 * @interface PaginatedTodoList
 */
export interface PaginatedTodoList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedTodoList
     */
    count?: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedTodoList
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedTodoList
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedTodoList
     */
    numPages?: number;
    /**
     * 
     * @type {Array<Todo>}
     * @memberof PaginatedTodoList
     */
    results?: Array<Todo>;
}

/**
 * Check if a given object implements the PaginatedTodoList interface.
 */
export function instanceOfPaginatedTodoList(value: object): value is PaginatedTodoList {
    return true;
}

export function PaginatedTodoListFromJSON(json: any): PaginatedTodoList {
    return PaginatedTodoListFromJSONTyped(json, false);
}

export function PaginatedTodoListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedTodoList {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'page': json['page'] == null ? undefined : json['page'],
        'size': json['size'] == null ? undefined : json['size'],
        'numPages': json['num_pages'] == null ? undefined : json['num_pages'],
        'results': json['results'] == null ? undefined : ((json['results'] as Array<any>).map(TodoFromJSON)),
    };
}

export function PaginatedTodoListToJSON(value?: PaginatedTodoList | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'count': value['count'],
        'page': value['page'],
        'size': value['size'],
        'num_pages': value['numPages'],
        'results': value['results'] == null ? undefined : ((value['results'] as Array<any>).map(TodoToJSON)),
    };
}

