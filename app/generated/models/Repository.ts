/* tslint:disable */
/* eslint-disable */
/**
 * CodeBox API
 * Code Box
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Repository
 */
export interface Repository {
    /**
     * 
     * @type {number}
     * @memberof Repository
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof Repository
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Repository
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Repository
     */
    readonly deletedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    readonly signature: string;
    /**
     * 
     * @type {Blob}
     * @memberof Repository
     */
    store: Blob;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    name: string;
}

/**
 * Check if a given object implements the Repository interface.
 */
export function instanceOfRepository(value: object): value is Repository {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('deletedAt' in value) || value['deletedAt'] === undefined) return false;
    if (!('signature' in value) || value['signature'] === undefined) return false;
    if (!('store' in value) || value['store'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function RepositoryFromJSON(json: any): Repository {
    return RepositoryFromJSONTyped(json, false);
}

export function RepositoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Repository {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'deletedAt': (new Date(json['deleted_at'])),
        'signature': json['signature'],
        'store': json['store'],
        'name': json['name'],
    };
}

export function RepositoryToJSON(value?: Omit<Repository, 'id'|'created_at'|'updated_at'|'deleted_at'|'signature'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'store': value['store'],
        'name': value['name'],
    };
}

