/* tslint:disable */
/* eslint-disable */
/**
 * CodeBox API
 * Code Box
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PeriodEnum } from './PeriodEnum';
import {
    PeriodEnumFromJSON,
    PeriodEnumFromJSONTyped,
    PeriodEnumToJSON,
} from './PeriodEnum';

/**
 * 
 * @export
 * @interface Interval
 */
export interface Interval {
    /**
     * 
     * @type {number}
     * @memberof Interval
     */
    readonly id: number;
    /**
     * Number of interval periods to wait before running the task again
     * @type {number}
     * @memberof Interval
     */
    every: number;
    /**
     * The type of period between task runs (Example: days)
     * 
     * * `days` - Days
     * * `hours` - Hours
     * * `minutes` - Minutes
     * * `seconds` - Seconds
     * * `microseconds` - Microseconds
     * @type {PeriodEnum}
     * @memberof Interval
     */
    period: PeriodEnum;
}



/**
 * Check if a given object implements the Interval interface.
 */
export function instanceOfInterval(value: object): value is Interval {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('every' in value) || value['every'] === undefined) return false;
    if (!('period' in value) || value['period'] === undefined) return false;
    return true;
}

export function IntervalFromJSON(json: any): Interval {
    return IntervalFromJSONTyped(json, false);
}

export function IntervalFromJSONTyped(json: any, ignoreDiscriminator: boolean): Interval {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'every': json['every'],
        'period': PeriodEnumFromJSON(json['period']),
    };
}

export function IntervalToJSON(value?: Omit<Interval, 'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'every': value['every'],
        'period': PeriodEnumToJSON(value['period']),
    };
}

