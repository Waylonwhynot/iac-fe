/* tslint:disable */
/* eslint-disable */
/**
 * CodeBox API
 * Code Box
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Stats
 */
export interface Stats {
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof Stats
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Stats
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Stats
     */
    readonly deletedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Stats
     */
    host: string;
    /**
     * 
     * @type {string}
     * @memberof Stats
     */
    ip?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    ok?: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    changed?: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    dark?: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    failures?: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    ignored?: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    processed?: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    rescued?: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    skipped?: number;
}

/**
 * Check if a given object implements the Stats interface.
 */
export function instanceOfStats(value: object): value is Stats {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('deletedAt' in value) || value['deletedAt'] === undefined) return false;
    if (!('host' in value) || value['host'] === undefined) return false;
    return true;
}

export function StatsFromJSON(json: any): Stats {
    return StatsFromJSONTyped(json, false);
}

export function StatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Stats {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'deletedAt': (new Date(json['deleted_at'])),
        'host': json['host'],
        'ip': json['ip'] == null ? undefined : json['ip'],
        'ok': json['ok'] == null ? undefined : json['ok'],
        'changed': json['changed'] == null ? undefined : json['changed'],
        'dark': json['dark'] == null ? undefined : json['dark'],
        'failures': json['failures'] == null ? undefined : json['failures'],
        'ignored': json['ignored'] == null ? undefined : json['ignored'],
        'processed': json['processed'] == null ? undefined : json['processed'],
        'rescued': json['rescued'] == null ? undefined : json['rescued'],
        'skipped': json['skipped'] == null ? undefined : json['skipped'],
    };
}

export function StatsToJSON(value?: Omit<Stats, 'id'|'created_at'|'updated_at'|'deleted_at'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'host': value['host'],
        'ip': value['ip'],
        'ok': value['ok'],
        'changed': value['changed'],
        'dark': value['dark'],
        'failures': value['failures'],
        'ignored': value['ignored'],
        'processed': value['processed'],
        'rescued': value['rescued'],
        'skipped': value['skipped'],
    };
}

